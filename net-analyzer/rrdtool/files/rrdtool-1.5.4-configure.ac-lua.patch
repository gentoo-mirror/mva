--- configure.ac.old	2015-09-24 21:41:32.747438024 +0600
+++ configure.ac	2015-09-25 16:31:23.178517412 +0600
@@ -756,7 +756,7 @@ AC_SUBST(RUBY)
 AC_SUBST(COMP_RUBY)
 
 dnl Check for Lua.
-AC_PATH_PROG(LUA, lua, no)
+AC_PATH_PROG(LUA, [lua, lua5.1, lua5.2, lua5.3, luajit], no)
 
 AC_ARG_ENABLE(lua,AS_HELP_STRING([--disable-lua],[do not build the lua modules]),
 [],[enable_lua=yes])
@@ -766,8 +766,11 @@ if test "$LUA" = "no" -o "$enable_lua" =
   enable_lua=no
 else
   AC_MSG_CHECKING(for lua >= 5.0)
-  read LUA_MAJOR LUA_MINOR LUA_POINT <<LUA_EOF
-    $($LUA -v 2>&1 | cut -f2 -d' ' | sed -e 's/\./ /g')
+  read LUA_MAJOR LUA_MINOR <<LUA_EOF
+    $($LUA -e 'print(_VERSION:match("(%d).(%d)"))' 2>&1 | cut -f2 -d' ' | sed -e 's/\./ /g')
+LUA_EOF
+  read lua_version <<LUA_EOF
+    $($LUA -v  2>&1 | sed -r -e 's#([:alpha:]*)[:space:]([[:alnum:][:punct:]]*)[:space:].*#\1 \2#')
 LUA_EOF
   if test 0$LUA_MAJOR -lt 5; then
     AC_MSG_RESULT([no, version found is $LUA_MAJOR.$LUA_MINOR])
@@ -775,7 +778,6 @@ LUA_EOF
     AC_MSG_RESULT([$LUA_MAJOR.$LUA_MINOR found])
     lua_vdot=$LUA_MAJOR.$LUA_MINOR
     lua_vndot=$LUA_MAJOR$LUA_MINOR
-    lua_version=$LUA_MAJOR.$LUA_MINOR.$LUA_POINT
     AC_CHECK_HEADERS(lua$lua_vndot/lua.h,
       [AC_CHECK_HEADERS(lua$lua_vndot/lualib.h,
         [AC_CHECK_HEADER(lua$lua_vndot/lauxlib.h,
@@ -828,16 +830,12 @@ LUA_EOF
         # OK, headers and libs found. Try to set lua flags
         # and modules installation dirs with pkg-config
         if test "$PKGCONFIG" != "no"; then
-          if test "$lua_vndot" = "50"; then
-            lua_pkg_prefix=lualib
-          else
-            lua_pkg_prefix=lua
-          fi
+          lua_pkg_prefix=`basename $LUA 2>/dev/null`
           # try with dot, without dot and finally without version
           for f in $lua_pkg_prefix$lua_vdot $lua_pkg_prefix$lua_vndot $lua_pkg_prefix; do
             lua_exec_prefix=`$PKGCONFIG --variable=prefix $f 2>/dev/null`
             # same binaries?
-            if test "$lua_exec_prefix/bin/lua" = "$LUA"; then 
+            if test "$lua_exec_prefix/bin/$lua_pkg_prefix" = "$LUA"; then 
                 # OK, found CFLAGS. Get Lua LFLAGS and modules install dir
                 LUA_CFLAGS=`$PKGCONFIG --cflags $f 2>/dev/null`
                 LUA_LFLAGS=`$PKGCONFIG --libs $f 2>/dev/null`
@@ -868,7 +866,7 @@ LUA_EOF
         dnl if lua-site-install is not set, overwrite LUA_INSTALL_CMOD already
         dnl found and install together with RRDtool, under $langpref.
         AC_ARG_ENABLE(lua-site-install,
-        AS_HELP_STRING([--enable-lua-site-install],[by default the lua module is installed together with rrdtool in $prefix/lib/lua/$lua_version. You have to add $prefix/lib/lua/$lua_version/?.so to package.cpath for lua to find 'rrd.so'. For lua 5.0 you may also need to change LUA_PATH to the same dir, to require 'compat-5.1'. When you set this option the lua modules will get installed wherever your Lua setup thinks it is best. WARNING: if you set this option, system lua modules compat-5.1.lua and rrd.so, if any, may be overwritten.]),
+        AS_HELP_STRING([--enable-lua-site-install],[by default the lua module is installed together with rrdtool in $prefix/lib/lua/$lua_vndot. You have to add $prefix/lib/lua/$lua_vndot/?.so to package.cpath for lua to find 'rrd.so'. For lua 5.0 you may also need to change LUA_PATH to the same dir, to require 'compat-5.1'. When you set this option the lua modules will get installed wherever your Lua setup thinks it is best. WARNING: if you set this option, system lua modules compat-5.1.lua and rrd.so, if any, may be overwritten.]),
         [],
         [LUA_INSTALL_CMOD="$LUA_RRD_LIBDIR"; LUA_INSTALL_LMOD="$LUA_RRD_LIBDIR"])
 
